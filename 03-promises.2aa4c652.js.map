{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAgBJ,SAASC,cAAc,mBAC7CF,EAAOM,iBAAiB,UAAU,SAAAC,G,mBAoBlC,SAAwBC,EAAUC,GAChC,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFM,YAAW,W,OAAMF,EAAQL,E,GAAQA,GAEjCO,YAAW,W,OAAMD,EAAON,E,GAAQA,E,KAnBlCQ,CAAeT,EAAUU,GACtBC,MAAK,SAAAC,GACJC,EAAAvB,GAASwB,OAAOC,QACd,qBAAoCC,OAAfhB,EAAS,QAAcgB,OAARJ,EAAQ,O,IAG/CK,OAAM,SAAAC,GACLL,EAAAvB,GAASwB,OAAOK,QAAQ,oBAAmCH,OAAfhB,EAAS,QAAYgB,OAANE,EAAM,O,IAErER,GAAaU,C,EAffrB,EAAMsB,iBAKN,IAJA,IAAIpB,EAAQqB,OAAO3B,EAAa4B,OAC5BH,EAAOE,OAAO1B,EAAY2B,OAC1BC,EAASF,OAAOzB,EAAc0B,OAC9Bb,EAAYT,EACPwB,EAAW,EAAGA,GAAYD,EAAQC,IAAUC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\nconst delayInputEl = document.querySelector('[name=\"delay\"]');\nconst stepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = Number(delayInputEl.value);\n  let step = Number(stepInputEl.value);\n  let amount = Number(amountInputEl.value);\n  let stepValue = delay;\n  for (let position = 1; position <= amount; position++) {\n    createPromises(position, stepValue)\n      .then(results => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${results} ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${error} ms`);\n      });\n    stepValue += step;\n  }\n});\n\nfunction createPromises(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => resolve(delay), delay);\n    } else {\n      setTimeout(() => reject(delay), delay);\n    }\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayInputEl","$ce04d3a99e08e73b$var$stepInputEl","$ce04d3a99e08e73b$var$amountInputEl","addEventListener","event","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromises","stepValue","then","results","$parcel$interopDefault","Notify","success","concat","catch","error","failure","step","preventDefault","Number","value","amount","position1","_loop"],"version":3,"file":"03-promises.2aa4c652.js.map"}