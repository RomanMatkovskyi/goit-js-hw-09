{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,kBACtCE,EAAcH,SAASC,cAAc,iBACrCG,EAAgBJ,SAASC,cAAc,mBAqB7C,SAASI,EAAeC,EAAUC,GAChC,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFM,YAAW,IAAMF,EAAQL,IAAQA,GAEjCO,YAAW,IAAMD,EAAON,IAAQA,EAAM,G,CA1B5CR,EAAOgB,iBAAiB,UAAUC,IAChCA,EAAMC,iBACN,IAAIV,EAAQW,OAAOhB,EAAaiB,OAC5BC,EAAOF,OAAOf,EAAYgB,OAC1BE,EAASH,OAAOd,EAAce,OAC9BG,EAAYf,EAChB,IAAK,IAAID,EAAW,EAAGA,GAAYe,EAAQf,IACzCD,EAAeC,EAAUgB,GACtBC,MAAKC,IACJC,EAAA5B,GAAS6B,OAAOC,QACd,qBAAqBrB,QAAekB,OACrC,IAEFI,OAAMC,IACLJ,EAAA5B,GAAS6B,OAAOI,QAAQ,oBAAoBxB,QAAeuB,OAAW,IAE1EP,GAAaF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\nconst delayInputEl = document.querySelector('[name=\"delay\"]');\nconst stepInputEl = document.querySelector('[name=\"step\"]');\nconst amountInputEl = document.querySelector('[name=\"amount\"]');\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  let delay = Number(delayInputEl.value);\n  let step = Number(stepInputEl.value);\n  let amount = Number(amountInputEl.value);\n  let stepValue = delay;\n  for (let position = 1; position <= amount; position++) {\n    createPromises(position, stepValue)\n      .then(results => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position} in ${results} ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${error} ms`);\n      });\n    stepValue += step;\n  }\n});\n\nfunction createPromises(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      setTimeout(() => resolve(delay), delay);\n    } else {\n      setTimeout(() => reject(delay), delay);\n    }\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayInputEl","$47d4ff9957288465$var$stepInputEl","$47d4ff9957288465$var$amountInputEl","$47d4ff9957288465$var$createPromises","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","Number","value","step","amount","stepValue","then","results","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.38650da0.js.map"}